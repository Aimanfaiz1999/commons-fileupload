/**
 * <?xml version="1.0" encoding="UTF-8"?>
 *         <!--
 *         Licensed to the Apache Software Foundation (ASF) under one or more
 *         contributor license agreements.  See the NOTICE file distributed with
 *         this work for additional information regarding copyright ownership.
 *         The ASF licenses this file to You under the Apache License, Version 2.0
 *         (the "License"); you may not use this file except in compliance with
 *         the License.  You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *         Unless required by applicable law or agreed to in writing, software
 *         distributed under the License is distributed on an "AS IS" BASIS,
 *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *         See the License for the specific language governing permissions and
 *         limitations under the License.
 *         -->
 * Scaffolding file used to store all the setups needed to run
 * tests automatically generated by EvoSuite
 * Sat May 20 20:34:37 GMT 2023
 */

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        java.lang.String str0 = org.apache.commons.fileupload2.AbstractFileUpload.MULTIPART;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "multipart/" + "'", str0, "multipart/");
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        java.lang.String str0 = org.apache.commons.fileupload2.AbstractFileUpload.MULTIPART_FORM_DATA;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "multipart/form-data" + "'", str0, "multipart/form-data");
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        java.lang.String str0 = org.apache.commons.fileupload2.AbstractFileUpload.CONTENT_TYPE;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "Content-type" + "'", str0, "Content-type");
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        java.lang.String str0 = org.apache.commons.fileupload2.AbstractFileUpload.ATTACHMENT;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "attachment" + "'", str0, "attachment");
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        java.lang.String str0 = org.apache.commons.fileupload2.AbstractFileUpload.MULTIPART_MIXED;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "multipart/mixed" + "'", str0, "multipart/mixed");
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        java.lang.String str0 = org.apache.commons.fileupload2.AbstractFileUpload.CONTENT_LENGTH;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "Content-length" + "'", str0, "Content-length");
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        org.apache.commons.fileupload2.RequestContext requestContext0 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean1 = org.apache.commons.fileupload2.AbstractFileUpload.isMultipartContent(requestContext0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.RequestContext.getContentType()\" because \"ctx\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        java.lang.Class<?> wildcardClass2 = fileUpload1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        java.lang.String str0 = org.apache.commons.fileupload2.AbstractFileUpload.CONTENT_DISPOSITION;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "Content-disposition" + "'", str0, "Content-disposition");
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.RequestContext requestContext5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList6 = fileUpload1.parseRequest(requestContext5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders7 = fileUpload1.getParsedHeaders("multipart/form-data");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        java.lang.String str0 = org.apache.commons.fileupload2.AbstractFileUpload.FORM_DATA;
        org.junit.Assert.assertEquals("'" + str0 + "' != '" + "form-data" + "'", str0, "form-data");
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.RequestContext requestContext7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap8 = fileUpload1.parseParameterMap(requestContext7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.Class<?> wildcardClass7 = fileUpload1.getClass();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.RequestContext requestContext7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList8 = fileUpload1.parseRequest(requestContext7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.RequestContext requestContext6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator7 = fileUpload1.getItemIterator(requestContext6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders9 = fileUpload1.getParsedHeaders("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders8 = fileUpload1.getParsedHeaders("multipart/mixed");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        java.lang.Class<?> wildcardClass6 = fileUpload1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders10 = fileUpload1.getParsedHeaders("Content-type");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders9 = fileUpload1.getParsedHeaders("multipart/mixed");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = fileUpload1.getFieldName(fileItemHeaders8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        fileUpload1.setHeaderEncoding("");
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.RequestContext requestContext7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList8 = fileUpload1.parseRequest(requestContext7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        org.apache.commons.fileupload2.FileUpload fileUpload0 = new org.apache.commons.fileupload2.FileUpload();
        java.lang.Class<?> wildcardClass1 = fileUpload0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.RequestContext requestContext7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap8 = fileUpload1.parseParameterMap(requestContext7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileSizeMax();
        java.lang.Class<?> wildcardClass5 = fileUpload1.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        fileUpload1.setHeaderEncoding("");
        org.apache.commons.fileupload2.RequestContext requestContext6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList7 = fileUpload1.parseRequest(requestContext6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = fileUpload1.getFileName(fileItemHeaders9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.RequestContext requestContext7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator8 = fileUpload1.getItemIterator(requestContext7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setHeaderEncoding("");
        org.apache.commons.fileupload2.RequestContext requestContext11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap12 = fileUpload1.parseParameterMap(requestContext11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setHeaderEncoding("Content-disposition");
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = fileUpload1.getFileName(fileItemHeaders10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        org.apache.commons.fileupload2.RequestContext requestContext10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap11 = fileUpload1.parseParameterMap(requestContext10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders11 = fileUpload1.getParsedHeaders("multipart/mixed");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener9);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        java.lang.String str8 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.RequestContext requestContext9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap10 = fileUpload1.parseParameterMap(requestContext9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        java.lang.String str8 = fileUpload1.getHeaderEncoding();
        java.lang.Class<?> wildcardClass9 = fileUpload1.getClass();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        java.lang.String str8 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = fileUpload1.getFieldName(fileItemHeaders9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setHeaderEncoding("");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = fileUpload1.getFileItemFactory();
        org.apache.commons.fileupload2.RequestContext requestContext12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap13 = fileUpload1.parseParameterMap(requestContext12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory11);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setHeaderEncoding("Content-disposition");
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        long long11 = fileUpload1.getSizeMax();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders13 = fileUpload1.getParsedHeaders("Content-type");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Content-disposition" + "'", str10, "Content-disposition");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory15 = fileUpload1.getFileItemFactory();
        org.apache.commons.fileupload2.RequestContext requestContext16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap17 = fileUpload1.parseParameterMap(requestContext16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory15);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        fileUpload1.setHeaderEncoding("");
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.Class<?> wildcardClass7 = fileUpload1.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        fileUpload1.setFileSizeMax((long) '4');
        long long7 = fileUpload1.getSizeMax();
        java.lang.Class<?> wildcardClass8 = fileUpload1.getClass();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        long long10 = fileUpload1.getFileCountMax();
        java.lang.Class<?> wildcardClass11 = fileUpload1.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        java.lang.String str11 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.RequestContext requestContext12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList13 = fileUpload1.parseRequest(requestContext12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        java.lang.String str11 = fileUpload1.getHeaderEncoding();
        byte[] byteArray13 = fileUpload1.getBoundary("");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders15 = fileUpload1.getParsedHeaders("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(byteArray13);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setHeaderEncoding("");
        org.apache.commons.fileupload2.RequestContext requestContext11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList12 = fileUpload1.parseRequest(requestContext11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        org.apache.commons.fileupload2.ProgressListener progressListener2 = null;
        fileUpload1.setProgressListener(progressListener2);
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = fileUpload1.getFieldName(fileItemHeaders4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setHeaderEncoding("");
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = fileUpload1.getFileName(fileItemHeaders11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setHeaderEncoding("Content-disposition");
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        long long11 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.RequestContext requestContext12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap13 = fileUpload1.parseParameterMap(requestContext12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Content-disposition" + "'", str10, "Content-disposition");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.Class<?> wildcardClass4 = fileUpload1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = fileUpload1.getFieldName(fileItemHeaders10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        long long9 = fileUpload1.getFileCountMax();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders11 = fileUpload1.getParsedHeaders("Content-disposition");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.ProgressListener progressListener8 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.RequestContext requestContext9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator10 = fileUpload1.getItemIterator(requestContext9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(progressListener8);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setHeaderEncoding("Content-disposition");
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        fileUpload1.setSizeMax((long) (byte) 100);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Content-disposition" + "'", str10, "Content-disposition");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        java.lang.String str9 = fileUpload1.getHeaderEncoding();
        fileUpload1.setFileCountMax((long) (short) 1);
        fileUpload1.setSizeMax((long) (byte) -1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Content-length" + "'", str9, "Content-length");
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        byte[] byteArray8 = fileUpload1.getBoundary("attachment");
        fileUpload1.setHeaderEncoding("Content-disposition");
        org.apache.commons.fileupload2.RequestContext requestContext11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList12 = fileUpload1.parseRequest(requestContext11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(byteArray8);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        java.lang.String str11 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.RequestContext requestContext12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap13 = fileUpload1.parseParameterMap(requestContext12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        byte[] byteArray12 = fileUpload1.getBoundary("multipart/");
        org.apache.commons.fileupload2.ProgressListener progressListener13 = fileUpload1.getProgressListener();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertNull(progressListener13);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        java.lang.String str11 = fileUpload1.getHeaderEncoding();
        byte[] byteArray13 = fileUpload1.getBoundary("");
        org.apache.commons.fileupload2.RequestContext requestContext14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap15 = fileUpload1.parseParameterMap(requestContext14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(byteArray13);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        byte[] byteArray12 = fileUpload1.getBoundary("multipart/");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory13 = fileUpload1.getFileItemFactory();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders15 = fileUpload1.getParsedHeaders("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertNull(fileItemFactory13);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.ProgressListener progressListener5 = null;
        fileUpload1.setProgressListener(progressListener5);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = fileUpload1.getFileName(fileItemHeaders8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders11 = fileUpload1.getParsedHeaders("multipart/");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        fileUpload1.setFileSizeMax(0L);
        byte[] byteArray7 = fileUpload1.getBoundary("");
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = fileUpload1.getFieldName(fileItemHeaders8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setFileCountMax((long) (short) 10);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        org.apache.commons.fileupload2.ProgressListener progressListener13 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.RequestContext requestContext14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList15 = fileUpload1.parseRequest(requestContext14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener13);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        fileUpload1.setFileSizeMax((long) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders8 = fileUpload1.getParsedHeaders("form-data");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = fileUpload1.getFileName(fileItemHeaders4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        fileUpload1.setSizeMax(100L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders12 = fileUpload1.getParsedHeaders("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        fileUpload1.setFileCountMax((long) 1);
        java.lang.Class<?> wildcardClass8 = fileUpload1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileCountMax((long) (short) 100);
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = fileUpload1.getFieldName(fileItemHeaders10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setFileCountMax((long) 10);
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.RequestContext requestContext11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList12 = fileUpload1.parseRequest(requestContext11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setFileCountMax((long) (byte) 10);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = fileUpload1.getFieldName(fileItemHeaders16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory13 = fileUpload1.getFileItemFactory();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders15 = fileUpload1.getParsedHeaders("Content-length");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory13);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        fileUpload1.setFileSizeMax((long) '4');
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = fileUpload1.getFieldName(fileItemHeaders7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setFileCountMax((long) 10);
        fileUpload1.setSizeMax((long) (byte) 10);
        java.lang.Class<?> wildcardClass12 = fileUpload1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        byte[] byteArray12 = fileUpload1.getBoundary("multipart/");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory13 = fileUpload1.getFileItemFactory();
        org.apache.commons.fileupload2.RequestContext requestContext14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap15 = fileUpload1.parseParameterMap(requestContext14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertNull(fileItemFactory13);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = fileUpload1.getFileName(fileItemHeaders5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        fileUpload1.setHeaderEncoding("attachment");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        fileUpload1.setHeaderEncoding("attachment");
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = fileUpload1.getFileName(fileItemHeaders12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        long long11 = fileUpload1.getSizeMax();
        byte[] byteArray13 = fileUpload1.getBoundary("Content-disposition");
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = fileUpload1.getFieldName(fileItemHeaders14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertNull(byteArray13);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory15 = fileUpload1.getFileItemFactory();
        fileUpload1.setFileCountMax((long) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders19 = fileUpload1.getParsedHeaders("attachment");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory15);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        fileUpload1.setFileSizeMax((long) ' ');
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory12 = fileUpload1.getFileItemFactory();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(fileItemFactory12);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        fileUpload1.setFileSizeMax((long) (short) 0);
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        java.lang.String str11 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.ProgressListener progressListener12 = fileUpload1.getProgressListener();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(progressListener12);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        org.apache.commons.fileupload2.ProgressListener progressListener2 = null;
        fileUpload1.setProgressListener(progressListener2);
        java.lang.Class<?> wildcardClass4 = fileUpload1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/form-data");
        byte[] byteArray9 = fileUpload1.getBoundary("");
        org.apache.commons.fileupload2.RequestContext requestContext10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList11 = fileUpload1.parseRequest(requestContext10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNull(byteArray9);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        fileUpload1.setHeaderEncoding("");
        fileUpload1.setSizeMax(0L);
        fileUpload1.setFileCountMax((long) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders17 = fileUpload1.getParsedHeaders("multipart/");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.RequestContext requestContext5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap6 = fileUpload1.parseParameterMap(requestContext5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setFileCountMax((long) 10);
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders12 = fileUpload1.getParsedHeaders("Content-disposition");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        fileUpload1.setFileSizeMax(0L);
        org.apache.commons.fileupload2.RequestContext requestContext6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap7 = fileUpload1.parseParameterMap(requestContext6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setFileSizeMax(1L);
        org.apache.commons.fileupload2.RequestContext requestContext15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator16 = fileUpload1.getItemIterator(requestContext15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        fileUpload1.setHeaderEncoding("multipart/");
        java.lang.String str17 = fileUpload1.getHeaderEncoding();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "multipart/" + "'", str17, "multipart/");
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        org.apache.commons.fileupload2.ProgressListener progressListener10 = fileUpload1.getProgressListener();
        byte[] byteArray12 = fileUpload1.getBoundary("multipart/");
        long long13 = fileUpload1.getSizeMax();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(progressListener10);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        fileUpload1.setHeaderEncoding("");
        long long6 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setFileCountMax((long) (byte) 10);
        fileUpload1.setSizeMax((long) 100);
        byte[] byteArray17 = fileUpload1.getBoundary("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders19 = fileUpload1.getParsedHeaders("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertNull(byteArray17);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        java.lang.String str9 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.RequestContext requestContext10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList11 = fileUpload1.parseRequest(requestContext10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Content-length" + "'", str9, "Content-length");
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setFileCountMax((long) (byte) 10);
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = fileUpload1.getFieldName(fileItemHeaders14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory15 = fileUpload1.getFileItemFactory();
        org.apache.commons.fileupload2.RequestContext requestContext16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator17 = fileUpload1.getItemIterator(requestContext16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory15);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        byte[] byteArray8 = fileUpload1.getBoundary("attachment");
        org.apache.commons.fileupload2.RequestContext requestContext9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap10 = fileUpload1.parseParameterMap(requestContext9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(byteArray8);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        org.apache.commons.fileupload2.ProgressListener progressListener10 = null;
        fileUpload1.setProgressListener(progressListener10);
        long long12 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener13 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = fileUpload1.getFieldName(fileItemHeaders14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 97L + "'", long12 == 97L);
        org.junit.Assert.assertNull(progressListener13);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setFileCountMax((long) (short) 10);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        long long13 = fileUpload1.getFileSizeMax();
        java.lang.String str14 = fileUpload1.getHeaderEncoding();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setHeaderEncoding("Content-disposition");
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        org.apache.commons.fileupload2.RequestContext requestContext14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap15 = fileUpload1.parseParameterMap(requestContext14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Content-disposition" + "'", str10, "Content-disposition");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setSizeMax(10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setHeaderEncoding("");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = fileUpload1.getFileItemFactory();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders13 = fileUpload1.getParsedHeaders("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory11);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.ProgressListener progressListener9 = null;
        fileUpload1.setProgressListener(progressListener9);
        long long11 = fileUpload1.getFileCountMax();
        java.lang.String str12 = fileUpload1.getHeaderEncoding();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        java.lang.String str8 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = fileUpload1.getFileItemFactory();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(fileItemFactory9);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        fileUpload1.setFileCountMax((long) 'a');
        org.apache.commons.fileupload2.ProgressListener progressListener13 = fileUpload1.getProgressListener();
        long long14 = fileUpload1.getFileCountMax();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertNull(progressListener13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 97L + "'", long14 == 97L);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        java.lang.Class<?> wildcardClass13 = fileUpload1.getClass();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        org.apache.commons.fileupload2.ProgressListener progressListener2 = null;
        fileUpload1.setProgressListener(progressListener2);
        org.apache.commons.fileupload2.RequestContext requestContext4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator5 = fileUpload1.getItemIterator(requestContext4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = fileUpload1.getFileName(fileItemHeaders9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setFileCountMax((long) 10);
        fileUpload1.setFileSizeMax((long) (short) -1);
        long long12 = fileUpload1.getSizeMax();
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 100L + "'", long12 == 100L);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setSizeMax((long) (short) 10);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        org.apache.commons.fileupload2.ProgressListener progressListener2 = null;
        fileUpload1.setProgressListener(progressListener2);
        fileUpload1.setHeaderEncoding("Content-type");
        org.apache.commons.fileupload2.RequestContext requestContext6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator7 = fileUpload1.getItemIterator(requestContext6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener5 = null;
        fileUpload1.setProgressListener(progressListener5);
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = fileUpload1.getFieldName(fileItemHeaders7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        long long10 = fileUpload1.getFileCountMax();
        long long11 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = fileUpload1.getFieldName(fileItemHeaders12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        fileUpload1.setFileSizeMax((long) '4');
        long long7 = fileUpload1.getSizeMax();
        fileUpload1.setFileCountMax(97L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        byte[] byteArray9 = fileUpload1.getBoundary("Content-type");
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = fileUpload1.getFieldName(fileItemHeaders10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNull(byteArray9);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setFileSizeMax(100L);
        byte[] byteArray16 = fileUpload1.getBoundary("attachment");
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = fileUpload1.getFileName(fileItemHeaders17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertNull(byteArray16);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        byte[] byteArray8 = fileUpload1.getBoundary("multipart/form-data");
        java.lang.Class<?> wildcardClass9 = fileUpload1.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        fileUpload1.setHeaderEncoding("");
        fileUpload1.setSizeMax(0L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory14 = null;
        fileUpload1.setFileItemFactory(fileItemFactory14);
        java.lang.String str16 = fileUpload1.getHeaderEncoding();
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        org.apache.commons.fileupload2.ProgressListener progressListener2 = null;
        fileUpload1.setProgressListener(progressListener2);
        fileUpload1.setHeaderEncoding("Content-type");
        java.lang.Class<?> wildcardClass6 = fileUpload1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        fileUpload1.setHeaderEncoding("multipart/");
        org.apache.commons.fileupload2.RequestContext requestContext17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap18 = fileUpload1.parseParameterMap(requestContext17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        org.apache.commons.fileupload2.ProgressListener progressListener10 = null;
        fileUpload1.setProgressListener(progressListener10);
        long long12 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener13 = fileUpload1.getProgressListener();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = progressListener13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 97L + "'", long12 == 97L);
        org.junit.Assert.assertNull(progressListener13);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory15 = fileUpload1.getFileItemFactory();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory16 = fileUpload1.getFileItemFactory();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory15);
        org.junit.Assert.assertNull(fileItemFactory16);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileCountMax((long) (short) 100);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory10 = fileUpload1.getFileItemFactory();
        org.apache.commons.fileupload2.ProgressListener progressListener11 = null;
        fileUpload1.setProgressListener(progressListener11);
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNull(fileItemFactory10);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("hi!");
        org.apache.commons.fileupload2.RequestContext requestContext8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList9 = fileUpload1.parseRequest(requestContext8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setHeaderEncoding("Content-disposition");
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory14 = null;
        fileUpload1.setFileItemFactory(fileItemFactory14);
        fileUpload1.setSizeMax((long) 10);
        org.apache.commons.fileupload2.ProgressListener progressListener18 = null;
        fileUpload1.setProgressListener(progressListener18);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Content-disposition" + "'", str10, "Content-disposition");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        fileUpload1.setFileSizeMax(0L);
        fileUpload1.setFileSizeMax((long) 10);
        long long8 = fileUpload1.getFileSizeMax();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        fileUpload1.setFileCountMax((long) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders18 = fileUpload1.getParsedHeaders("multipart/form-data");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = fileUpload1.getFieldName(fileItemHeaders8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        org.apache.commons.fileupload2.ProgressListener progressListener10 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.RequestContext requestContext11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList12 = fileUpload1.parseRequest(requestContext11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(progressListener10);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        fileUpload1.setFileSizeMax((long) (short) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener11 = null;
        fileUpload1.setProgressListener(progressListener11);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setFileCountMax((long) (short) 10);
        byte[] byteArray12 = fileUpload1.getBoundary("Content-type");
        org.apache.commons.fileupload2.RequestContext requestContext13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator14 = fileUpload1.getItemIterator(requestContext13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(byteArray12);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.RequestContext requestContext11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap12 = fileUpload1.parseParameterMap(requestContext11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        fileUpload1.setHeaderEncoding("multipart/form-data");
        fileUpload1.setSizeMax((long) '4');
        fileUpload1.setFileSizeMax((-1L));
        java.lang.String str11 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.RequestContext requestContext12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator13 = fileUpload1.getItemIterator(requestContext12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "multipart/form-data" + "'", str11, "multipart/form-data");
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.ProgressListener progressListener8 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.RequestContext requestContext9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList10 = fileUpload1.parseRequest(requestContext9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(progressListener8);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        fileUpload1.setHeaderEncoding("multipart/");
        org.apache.commons.fileupload2.ProgressListener progressListener17 = null;
        fileUpload1.setProgressListener(progressListener17);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory15 = fileUpload1.getFileItemFactory();
        fileUpload1.setFileCountMax((long) (byte) -1);
        long long18 = fileUpload1.getFileCountMax();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener5 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.RequestContext requestContext6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList7 = fileUpload1.parseRequest(requestContext6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener5);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setFileCountMax((long) (short) 10);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        long long13 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener14 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = fileUpload1.getFieldName(fileItemHeaders15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNull(progressListener14);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setFileSizeMax(1L);
        byte[] byteArray16 = fileUpload1.getBoundary("Content-type");
        long long17 = fileUpload1.getFileSizeMax();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setHeaderEncoding("Content-disposition");
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        fileUpload1.setFileSizeMax(1L);
        long long16 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.RequestContext requestContext17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap18 = fileUpload1.parseParameterMap(requestContext17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Content-disposition" + "'", str10, "Content-disposition");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        long long10 = fileUpload1.getSizeMax();
        fileUpload1.setHeaderEncoding("form-data");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        fileUpload1.setFileSizeMax((long) 10);
        org.apache.commons.fileupload2.RequestContext requestContext13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator14 = fileUpload1.getItemIterator(requestContext13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        fileUpload1.setHeaderEncoding("multipart/form-data");
        fileUpload1.setSizeMax((long) '4');
        fileUpload1.setFileSizeMax((-1L));
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders12 = fileUpload1.getParsedHeaders("Content-disposition");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory7 = fileUpload1.getFileItemFactory();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders9 = fileUpload1.getParsedHeaders("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory7);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        fileUpload1.setHeaderEncoding("attachment");
        long long10 = fileUpload1.getSizeMax();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100L + "'", long10 == 100L);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        byte[] byteArray16 = fileUpload1.getBoundary("hi!");
        fileUpload1.setSizeMax((long) (short) 1);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(byteArray16);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setFileSizeMax(100L);
        long long15 = fileUpload1.getSizeMax();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        org.apache.commons.fileupload2.FileUpload fileUpload0 = new org.apache.commons.fileupload2.FileUpload();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = fileUpload0.getFileName(fileItemHeaders1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.ProgressListener progressListener5 = null;
        fileUpload1.setProgressListener(progressListener5);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = fileUpload1.getProgressListener();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(progressListener7);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setFileCountMax((long) (short) -1);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders9 = fileUpload1.getParsedHeaders("multipart/");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = fileUpload1.getFieldName(fileItemHeaders7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.ProgressListener progressListener8 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.RequestContext requestContext9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator10 = fileUpload1.getItemIterator(requestContext9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(progressListener8);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileSizeMax(10L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.RequestContext requestContext11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList12 = fileUpload1.parseRequest(requestContext11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        fileUpload1.setFileCountMax((long) 'a');
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory13 = null;
        fileUpload1.setFileItemFactory(fileItemFactory13);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        java.lang.String str9 = fileUpload1.getHeaderEncoding();
        long long10 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.ProgressListener progressListener11 = fileUpload1.getProgressListener();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Content-length" + "'", str9, "Content-length");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(progressListener11);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        fileUpload1.setHeaderEncoding("attachment");
        fileUpload1.setFileSizeMax((long) (short) -1);
        java.lang.Class<?> wildcardClass12 = fileUpload1.getClass();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        fileUpload1.setFileCountMax((long) 1);
        byte[] byteArray18 = fileUpload1.getBoundary("multipart/form-data");
        fileUpload1.setFileSizeMax((long) (byte) 0);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(byteArray18);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.RequestContext requestContext11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap12 = fileUpload1.parseParameterMap(requestContext11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        fileUpload1.setSizeMax(100L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        fileUpload1.setFileCountMax((long) (short) 10);
        org.apache.commons.fileupload2.RequestContext requestContext13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap14 = fileUpload1.parseParameterMap(requestContext13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setFileCountMax((long) 10);
        fileUpload1.setFileSizeMax((long) (short) -1);
        java.lang.Class<?> wildcardClass12 = fileUpload1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        fileUpload1.setHeaderEncoding("multipart/mixed");
        org.apache.commons.fileupload2.RequestContext requestContext9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap10 = fileUpload1.parseParameterMap(requestContext9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        org.apache.commons.fileupload2.ProgressListener progressListener10 = fileUpload1.getProgressListener();
        byte[] byteArray12 = fileUpload1.getBoundary("multipart/");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory13 = null;
        fileUpload1.setFileItemFactory(fileItemFactory13);
        byte[] byteArray16 = fileUpload1.getBoundary("hi!");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(progressListener10);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertNull(byteArray16);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setSizeMax((long) (byte) 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        fileUpload1.setHeaderEncoding("attachment");
        fileUpload1.setFileSizeMax((long) 1);
        long long12 = fileUpload1.getFileCountMax();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener5 = fileUpload1.getProgressListener();
        long long6 = fileUpload1.getFileCountMax();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory5 = null;
        fileUpload1.setFileItemFactory(fileItemFactory5);
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = fileUpload1.getFieldName(fileItemHeaders7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory10 = fileUpload1.getFileItemFactory();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(progressListener9);
        org.junit.Assert.assertNull(fileItemFactory10);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        java.lang.String str11 = fileUpload1.getHeaderEncoding();
        byte[] byteArray13 = fileUpload1.getBoundary("");
        org.apache.commons.fileupload2.RequestContext requestContext14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator15 = fileUpload1.getItemIterator(requestContext14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(byteArray13);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        fileUpload1.setHeaderEncoding("multipart/form-data");
        fileUpload1.setSizeMax((long) '4');
        fileUpload1.setHeaderEncoding("Content-type");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setFileCountMax((long) (short) 10);
        fileUpload1.setFileSizeMax(0L);
        org.apache.commons.fileupload2.RequestContext requestContext13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator14 = fileUpload1.getItemIterator(requestContext13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.ProgressListener progressListener9 = null;
        fileUpload1.setProgressListener(progressListener9);
        long long11 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.RequestContext requestContext12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator13 = fileUpload1.getItemIterator(requestContext12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = fileUpload1.getFileName(fileItemHeaders8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setFileCountMax((long) (byte) 10);
        fileUpload1.setSizeMax((long) 100);
        byte[] byteArray17 = fileUpload1.getBoundary("hi!");
        byte[] byteArray19 = fileUpload1.getBoundary("attachment");
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = fileUpload1.getFileName(fileItemHeaders20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNull(byteArray19);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        byte[] byteArray8 = fileUpload1.getBoundary("attachment");
        fileUpload1.setHeaderEncoding("Content-disposition");
        byte[] byteArray12 = fileUpload1.getBoundary("Content-type");
        fileUpload1.setFileSizeMax((long) (short) 100);
        long long15 = fileUpload1.getSizeMax();
        java.lang.Class<?> wildcardClass16 = fileUpload1.getClass();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setFileCountMax((long) (short) 10);
        fileUpload1.setFileSizeMax(0L);
        long long13 = fileUpload1.getSizeMax();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        java.lang.String str11 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory12 = fileUpload1.getFileItemFactory();
        java.lang.String str13 = fileUpload1.getHeaderEncoding();
        fileUpload1.setHeaderEncoding("Content-length");
        fileUpload1.setSizeMax((long) 100);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(fileItemFactory12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setHeaderEncoding("Content-disposition");
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        fileUpload1.setFileSizeMax(1L);
        long long16 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.RequestContext requestContext17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator18 = fileUpload1.getItemIterator(requestContext17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Content-disposition" + "'", str10, "Content-disposition");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        fileUpload1.setFileCountMax((long) 1);
        long long8 = fileUpload1.getSizeMax();
        long long9 = fileUpload1.getFileSizeMax();
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setFileCountMax((long) 100);
        long long4 = fileUpload1.getFileCountMax();
        byte[] byteArray6 = fileUpload1.getBoundary("multipart/mixed");
        long long7 = fileUpload1.getFileCountMax();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
        org.junit.Assert.assertNull(byteArray6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        fileUpload1.setFileSizeMax((long) 10);
        org.apache.commons.fileupload2.RequestContext requestContext13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList14 = fileUpload1.parseRequest(requestContext13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        byte[] byteArray16 = fileUpload1.getBoundary("hi!");
        fileUpload1.setHeaderEncoding("hi!");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(byteArray16);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setHeaderEncoding("Content-disposition");
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory14 = null;
        fileUpload1.setFileItemFactory(fileItemFactory14);
        fileUpload1.setSizeMax((long) 10);
        org.apache.commons.fileupload2.RequestContext requestContext18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator19 = fileUpload1.getItemIterator(requestContext18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Content-disposition" + "'", str10, "Content-disposition");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.RequestContext requestContext10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap11 = fileUpload1.parseParameterMap(requestContext10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(progressListener9);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setFileSizeMax(100L);
        org.apache.commons.fileupload2.ProgressListener progressListener15 = fileUpload1.getProgressListener();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertNull(progressListener15);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = fileUpload1.getFileItemFactory();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(fileItemFactory8);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        fileUpload1.setFileCountMax((long) 'a');
        org.apache.commons.fileupload2.ProgressListener progressListener13 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.RequestContext requestContext14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap15 = fileUpload1.parseParameterMap(requestContext14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertNull(progressListener13);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        fileUpload1.setHeaderEncoding("");
        org.apache.commons.fileupload2.RequestContext requestContext6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator7 = fileUpload1.getItemIterator(requestContext6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders9 = fileUpload1.getParsedHeaders("multipart/form-data");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setSizeMax(1L);
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        org.apache.commons.fileupload2.ProgressListener progressListener10 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = fileUpload1.getFieldName(fileItemHeaders11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(progressListener10);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory5 = null;
        fileUpload1.setFileItemFactory(fileItemFactory5);
        org.apache.commons.fileupload2.RequestContext requestContext7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList8 = fileUpload1.parseRequest(requestContext7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        java.lang.Class<?> wildcardClass11 = fileUpload1.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setHeaderEncoding("Content-disposition");
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        fileUpload1.setFileSizeMax(1L);
        java.lang.String str16 = fileUpload1.getHeaderEncoding();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Content-disposition" + "'", str10, "Content-disposition");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Content-length" + "'", str16, "Content-length");
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setFileCountMax((long) 10);
        fileUpload1.setSizeMax((long) (byte) 10);
        byte[] byteArray13 = fileUpload1.getBoundary("multipart/form-data");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory14 = null;
        fileUpload1.setFileItemFactory(fileItemFactory14);
        org.junit.Assert.assertNull(byteArray13);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileSizeMax();
        long long5 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener6 = fileUpload1.getProgressListener();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNull(progressListener6);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        byte[] byteArray8 = fileUpload1.getBoundary("attachment");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = byteArray8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(byteArray8);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileSizeMax(10L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = fileUpload1.getFileItemFactory();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        org.junit.Assert.assertNull(fileItemFactory6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        long long10 = fileUpload1.getFileCountMax();
        fileUpload1.setHeaderEncoding("Content-length");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setSizeMax((long) 1);
        long long7 = fileUpload1.getFileCountMax();
        byte[] byteArray9 = fileUpload1.getBoundary("attachment");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertNull(byteArray9);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        org.apache.commons.fileupload2.ProgressListener progressListener10 = fileUpload1.getProgressListener();
        byte[] byteArray12 = fileUpload1.getBoundary("multipart/");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory13 = null;
        fileUpload1.setFileItemFactory(fileItemFactory13);
        org.apache.commons.fileupload2.RequestContext requestContext15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator16 = fileUpload1.getItemIterator(requestContext15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(progressListener10);
        org.junit.Assert.assertNull(byteArray12);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        org.apache.commons.fileupload2.ProgressListener progressListener10 = null;
        fileUpload1.setProgressListener(progressListener10);
        org.apache.commons.fileupload2.RequestContext requestContext12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList13 = fileUpload1.parseRequest(requestContext12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        org.apache.commons.fileupload2.ProgressListener progressListener10 = null;
        fileUpload1.setProgressListener(progressListener10);
        fileUpload1.setFileCountMax((long) ' ');
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        byte[] byteArray9 = fileUpload1.getBoundary("Content-disposition");
        fileUpload1.setHeaderEncoding("Content-type");
        long long12 = fileUpload1.getSizeMax();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 100L + "'", long12 == 100L);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("multipart/mixed");
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        fileUpload1.setHeaderEncoding("");
        fileUpload1.setSizeMax(0L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory14 = null;
        fileUpload1.setFileItemFactory(fileItemFactory14);
        org.apache.commons.fileupload2.RequestContext requestContext16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator17 = fileUpload1.getItemIterator(requestContext16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        org.apache.commons.fileupload2.ProgressListener progressListener10 = fileUpload1.getProgressListener();
        long long11 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.RequestContext requestContext12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator13 = fileUpload1.getItemIterator(requestContext12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(progressListener10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        java.lang.String str11 = fileUpload1.getHeaderEncoding();
        byte[] byteArray13 = fileUpload1.getBoundary("");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory14 = null;
        fileUpload1.setFileItemFactory(fileItemFactory14);
        org.apache.commons.fileupload2.RequestContext requestContext16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList17 = fileUpload1.parseRequest(requestContext16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(byteArray13);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        fileUpload1.setHeaderEncoding("");
        fileUpload1.setSizeMax(0L);
        org.apache.commons.fileupload2.RequestContext requestContext14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap15 = fileUpload1.parseParameterMap(requestContext14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        fileUpload1.setHeaderEncoding("Content-type");
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileSizeMax(10L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = fileUpload1.getFileItemFactory();
        fileUpload1.setFileSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        org.junit.Assert.assertNull(fileItemFactory6);
        org.junit.Assert.assertNull(progressListener9);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        fileUpload1.setFileSizeMax((long) (short) 100);
        long long11 = fileUpload1.getFileCountMax();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        java.lang.String str11 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory12 = fileUpload1.getFileItemFactory();
        java.lang.String str13 = fileUpload1.getHeaderEncoding();
        fileUpload1.setHeaderEncoding("Content-length");
        org.apache.commons.fileupload2.ProgressListener progressListener16 = fileUpload1.getProgressListener();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(fileItemFactory12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(progressListener16);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        long long8 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = fileUpload1.getFileItemFactory();
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(fileItemFactory9);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.Class<?> wildcardClass6 = fileUpload1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        fileUpload1.setFileCountMax((long) 1);
        fileUpload1.setFileSizeMax((long) (short) 1);
        byte[] byteArray11 = fileUpload1.getBoundary("attachment");
        byte[] byteArray13 = fileUpload1.getBoundary("");
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertNull(byteArray13);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setHeaderEncoding("Content-disposition");
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        org.apache.commons.fileupload2.ProgressListener progressListener14 = null;
        fileUpload1.setProgressListener(progressListener14);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Content-disposition" + "'", str10, "Content-disposition");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setFileCountMax((long) (short) 10);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        long long13 = fileUpload1.getFileCountMax();
        fileUpload1.setHeaderEncoding("multipart/form-data");
        fileUpload1.setHeaderEncoding("Content-length");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        fileUpload1.setFileSizeMax((long) '4');
        fileUpload1.setSizeMax(100L);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        fileUpload1.setHeaderEncoding("");
        fileUpload1.setFileSizeMax((long) 1);
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener5 = fileUpload1.getProgressListener();
        fileUpload1.setSizeMax(1L);
        long long8 = fileUpload1.getFileCountMax();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        byte[] byteArray8 = fileUpload1.getBoundary("attachment");
        fileUpload1.setHeaderEncoding("Content-disposition");
        byte[] byteArray12 = fileUpload1.getBoundary("Content-type");
        fileUpload1.setFileSizeMax((long) (short) 100);
        long long15 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory16 = null;
        fileUpload1.setFileItemFactory(fileItemFactory16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders19 = fileUpload1.getParsedHeaders("multipart/form-data");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        java.lang.String str11 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = fileUpload1.getFieldName(fileItemHeaders12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/form-data");
        byte[] byteArray9 = fileUpload1.getBoundary("");
        long long10 = fileUpload1.getSizeMax();
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100L + "'", long10 == 100L);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        fileUpload1.setHeaderEncoding("");
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.RequestContext requestContext7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap8 = fileUpload1.parseParameterMap(requestContext7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        fileUpload1.setFileSizeMax((long) (short) 100);
        fileUpload1.setSizeMax((-1L));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = fileUpload1.getFileItemFactory();
        org.junit.Assert.assertNull(fileItemFactory6);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setHeaderEncoding("");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = fileUpload1.getFileItemFactory();
        fileUpload1.setSizeMax((long) (short) 10);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory11);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        byte[] byteArray8 = fileUpload1.getBoundary("attachment");
        fileUpload1.setHeaderEncoding("Content-disposition");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        java.lang.Class<?> wildcardClass13 = fileUpload1.getClass();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory15 = fileUpload1.getFileItemFactory();
        fileUpload1.setFileCountMax((long) (byte) -1);
        byte[] byteArray19 = fileUpload1.getBoundary("hi!");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory20 = fileUpload1.getFileItemFactory();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory15);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNull(fileItemFactory20);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener5 = null;
        fileUpload1.setProgressListener(progressListener5);
        org.apache.commons.fileupload2.RequestContext requestContext7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator8 = fileUpload1.getItemIterator(requestContext7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setFileCountMax((long) 10);
        fileUpload1.setSizeMax((long) (byte) 10);
        org.apache.commons.fileupload2.RequestContext requestContext12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap13 = fileUpload1.parseParameterMap(requestContext12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        byte[] byteArray12 = fileUpload1.getBoundary("hi!");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory13 = fileUpload1.getFileItemFactory();
        fileUpload1.setFileCountMax((long) (byte) 0);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertNull(fileItemFactory13);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        org.apache.commons.fileupload2.ProgressListener progressListener10 = null;
        fileUpload1.setProgressListener(progressListener10);
        long long12 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener13 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.ProgressListener progressListener14 = fileUpload1.getProgressListener();
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 97L + "'", long12 == 97L);
        org.junit.Assert.assertNull(progressListener13);
        org.junit.Assert.assertNull(progressListener14);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        byte[] byteArray8 = fileUpload1.getBoundary("multipart/form-data");
        long long9 = fileUpload1.getFileCountMax();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        byte[] byteArray8 = fileUpload1.getBoundary("attachment");
        fileUpload1.setHeaderEncoding("Content-disposition");
        byte[] byteArray12 = fileUpload1.getBoundary("Content-type");
        fileUpload1.setFileCountMax((long) '#');
        long long15 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = fileUpload1.getFileName(fileItemHeaders16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        org.apache.commons.fileupload2.ProgressListener progressListener10 = fileUpload1.getProgressListener();
        long long11 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener12 = fileUpload1.getProgressListener();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(progressListener10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertNull(progressListener12);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        fileUpload1.setFileSizeMax((long) (short) 100);
        org.apache.commons.fileupload2.RequestContext requestContext11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap12 = fileUpload1.parseParameterMap(requestContext11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        fileUpload1.setFileSizeMax((long) 0);
        org.junit.Assert.assertNull(byteArray7);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileSizeMax(10L);
        fileUpload1.setFileCountMax(97L);
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = fileUpload1.getFileName(fileItemHeaders8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        byte[] byteArray6 = fileUpload1.getBoundary("hi!");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(byteArray6);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        org.apache.commons.fileupload2.ProgressListener progressListener10 = null;
        fileUpload1.setProgressListener(progressListener10);
        java.lang.String str12 = fileUpload1.getHeaderEncoding();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        long long11 = fileUpload1.getSizeMax();
        byte[] byteArray13 = fileUpload1.getBoundary("Content-disposition");
        fileUpload1.setFileCountMax((long) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders17 = fileUpload1.getParsedHeaders("multipart/");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertNull(byteArray13);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        java.lang.String str9 = fileUpload1.getHeaderEncoding();
        fileUpload1.setFileCountMax((long) (short) 1);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory12 = null;
        fileUpload1.setFileItemFactory(fileItemFactory12);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Content-length" + "'", str9, "Content-length");
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        byte[] byteArray8 = fileUpload1.getBoundary("attachment");
        fileUpload1.setHeaderEncoding("Content-disposition");
        byte[] byteArray12 = fileUpload1.getBoundary("Content-type");
        fileUpload1.setFileSizeMax((long) (short) 100);
        long long15 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory16 = null;
        fileUpload1.setFileItemFactory(fileItemFactory16);
        java.lang.String str18 = fileUpload1.getHeaderEncoding();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Content-disposition" + "'", str18, "Content-disposition");
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        long long9 = fileUpload1.getFileCountMax();
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        fileUpload1.setSizeMax(0L);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileSizeMax(10L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = fileUpload1.getFileItemFactory();
        org.apache.commons.fileupload2.ProgressListener progressListener7 = fileUpload1.getProgressListener();
        org.junit.Assert.assertNull(fileItemFactory6);
        org.junit.Assert.assertNull(progressListener7);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        org.apache.commons.fileupload2.ProgressListener progressListener2 = null;
        fileUpload1.setProgressListener(progressListener2);
        fileUpload1.setHeaderEncoding("Content-type");
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = fileUpload1.getFileName(fileItemHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setFileCountMax((long) 100);
        long long4 = fileUpload1.getFileCountMax();
        byte[] byteArray6 = fileUpload1.getBoundary("multipart/");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
        org.junit.Assert.assertNull(byteArray6);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        org.apache.commons.fileupload2.ProgressListener progressListener10 = null;
        fileUpload1.setProgressListener(progressListener10);
        fileUpload1.setFileSizeMax((long) '#');
        org.apache.commons.fileupload2.ProgressListener progressListener14 = fileUpload1.getProgressListener();
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNull(progressListener14);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory13 = null;
        fileUpload1.setFileItemFactory(fileItemFactory13);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileSizeMax(10L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = fileUpload1.getFileItemFactory();
        fileUpload1.setFileSizeMax((long) 100);
        fileUpload1.setFileCountMax(1L);
        org.junit.Assert.assertNull(fileItemFactory6);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setFileCountMax((long) 100);
        long long4 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = fileUpload1.getFileName(fileItemHeaders5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        fileUpload1.setFileCountMax((long) 1);
        byte[] byteArray18 = fileUpload1.getBoundary("multipart/form-data");
        fileUpload1.setHeaderEncoding("Content-type");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(byteArray18);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        long long10 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener11 = fileUpload1.getProgressListener();
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 97L + "'", long10 == 97L);
        org.junit.Assert.assertNull(progressListener11);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        fileUpload1.setFileSizeMax(0L);
        fileUpload1.setFileSizeMax((long) 10);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        fileUpload1.setFileSizeMax((long) (byte) 0);
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        org.apache.commons.fileupload2.ProgressListener progressListener2 = null;
        fileUpload1.setProgressListener(progressListener2);
        org.apache.commons.fileupload2.RequestContext requestContext4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap5 = fileUpload1.parseParameterMap(requestContext4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        long long10 = fileUpload1.getFileCountMax();
        long long11 = fileUpload1.getFileSizeMax();
        long long12 = fileUpload1.getFileSizeMax();
        java.lang.String str13 = fileUpload1.getHeaderEncoding();
        java.lang.Class<?> wildcardClass14 = fileUpload1.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.ProgressListener progressListener6 = fileUpload1.getProgressListener();
        org.junit.Assert.assertNull(progressListener6);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        long long10 = fileUpload1.getFileCountMax();
        long long11 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener12 = null;
        fileUpload1.setProgressListener(progressListener12);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setFileCountMax((long) 10);
        fileUpload1.setFileSizeMax((long) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders13 = fileUpload1.getParsedHeaders("Content-type");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setHeaderEncoding("");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = fileUpload1.getFileItemFactory();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory12 = fileUpload1.getFileItemFactory();
        fileUpload1.setSizeMax((-1L));
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory11);
        org.junit.Assert.assertNull(fileItemFactory12);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        org.apache.commons.fileupload2.ProgressListener progressListener10 = fileUpload1.getProgressListener();
        byte[] byteArray12 = fileUpload1.getBoundary("multipart/");
        byte[] byteArray14 = fileUpload1.getBoundary("Content-length");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(progressListener10);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertNull(byteArray14);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileSizeMax();
        long long5 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = fileUpload1.getFileItemFactory();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory6);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        long long10 = fileUpload1.getFileSizeMax();
        byte[] byteArray12 = fileUpload1.getBoundary("");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory13 = fileUpload1.getFileItemFactory();
        java.lang.Class<?> wildcardClass14 = fileUpload1.getClass();
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 97L + "'", long10 == 97L);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertNull(fileItemFactory13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setFileSizeMax(100L);
        byte[] byteArray16 = fileUpload1.getBoundary("attachment");
        org.apache.commons.fileupload2.ProgressListener progressListener17 = null;
        fileUpload1.setProgressListener(progressListener17);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertNull(byteArray16);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setHeaderEncoding("Content-disposition");
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.RequestContext requestContext11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList12 = fileUpload1.parseRequest(requestContext11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Content-disposition" + "'", str10, "Content-disposition");
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory5 = fileUpload1.getFileItemFactory();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(fileItemFactory5);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        long long10 = fileUpload1.getFileCountMax();
        long long11 = fileUpload1.getFileSizeMax();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders13 = fileUpload1.getParsedHeaders("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        fileUpload1.setHeaderEncoding("");
        fileUpload1.setHeaderEncoding("multipart/form-data");
        long long8 = fileUpload1.getFileSizeMax();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        fileUpload1.setFileSizeMax(0L);
        byte[] byteArray7 = fileUpload1.getBoundary("");
        fileUpload1.setFileCountMax((long) (byte) 100);
        java.lang.Class<?> wildcardClass10 = fileUpload1.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        org.apache.commons.fileupload2.ProgressListener progressListener10 = fileUpload1.getProgressListener();
        byte[] byteArray12 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileCountMax((long) (short) -1);
        long long15 = fileUpload1.getSizeMax();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(progressListener10);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        byte[] byteArray8 = fileUpload1.getBoundary("attachment");
        fileUpload1.setHeaderEncoding("Content-disposition");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        byte[] byteArray14 = fileUpload1.getBoundary("hi!");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertNull(byteArray14);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileSizeMax(10L);
        org.apache.commons.fileupload2.RequestContext requestContext6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator7 = fileUpload1.getItemIterator(requestContext6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        org.apache.commons.fileupload2.RequestContext requestContext13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList14 = fileUpload1.parseRequest(requestContext13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        fileUpload1.setFileSizeMax(0L);
        fileUpload1.setFileCountMax((long) (short) 10);
        org.junit.Assert.assertNull(byteArray3);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setFileSizeMax(1L);
        byte[] byteArray16 = fileUpload1.getBoundary("Content-type");
        fileUpload1.setSizeMax((long) (short) 100);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(byteArray16);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener5 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.RequestContext requestContext6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap7 = fileUpload1.parseParameterMap(requestContext6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener5);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        java.lang.String str8 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.RequestContext requestContext10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap11 = fileUpload1.parseParameterMap(requestContext10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(progressListener9);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        long long5 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.RequestContext requestContext6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap7 = fileUpload1.parseParameterMap(requestContext6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setHeaderEncoding("Content-disposition");
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory14 = null;
        fileUpload1.setFileItemFactory(fileItemFactory14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders17 = fileUpload1.getParsedHeaders("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Content-disposition" + "'", str10, "Content-disposition");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        long long10 = fileUpload1.getFileCountMax();
        long long11 = fileUpload1.getFileSizeMax();
        long long12 = fileUpload1.getSizeMax();
        fileUpload1.setHeaderEncoding("attachment");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        fileUpload1.setSizeMax(100L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setFileCountMax((long) (-1));
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        long long5 = fileUpload1.getFileCountMax();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders7 = fileUpload1.getParsedHeaders("multipart/mixed");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        byte[] byteArray8 = fileUpload1.getBoundary("multipart/form-data");
        fileUpload1.setFileSizeMax(100L);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(byteArray8);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        java.lang.String str7 = fileUpload1.getHeaderEncoding();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.RequestContext requestContext9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator10 = fileUpload1.getItemIterator(requestContext9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setFileCountMax((long) (short) 10);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        org.apache.commons.fileupload2.ProgressListener progressListener13 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory14 = fileUpload1.getFileItemFactory();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = fileUpload1.getFieldName(fileItemHeaders15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener13);
        org.junit.Assert.assertNull(fileItemFactory14);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory7 = fileUpload1.getFileItemFactory();
        java.lang.String str8 = fileUpload1.getHeaderEncoding();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders10 = fileUpload1.getParsedHeaders("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setFileCountMax((long) 100);
        long long4 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.RequestContext requestContext5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator6 = fileUpload1.getItemIterator(requestContext5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        org.apache.commons.fileupload2.ProgressListener progressListener10 = null;
        fileUpload1.setProgressListener(progressListener10);
        long long12 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener13 = fileUpload1.getProgressListener();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders15 = fileUpload1.getParsedHeaders("multipart/mixed");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: Expected headers to be terminated by an empty line.");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 97L + "'", long12 == 97L);
        org.junit.Assert.assertNull(progressListener13);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        long long11 = fileUpload1.getSizeMax();
        byte[] byteArray13 = fileUpload1.getBoundary("Content-disposition");
        fileUpload1.setFileCountMax((long) (short) 10);
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = fileUpload1.getFileName(fileItemHeaders16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertNull(byteArray13);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileSizeMax();
        long long8 = fileUpload1.getFileCountMax();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        long long5 = fileUpload1.getFileCountMax();
        long long6 = fileUpload1.getFileSizeMax();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileCountMax((long) (short) 100);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory10 = fileUpload1.getFileItemFactory();
        org.apache.commons.fileupload2.ProgressListener progressListener11 = fileUpload1.getProgressListener();
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNull(fileItemFactory10);
        org.junit.Assert.assertNull(progressListener11);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        java.lang.String str8 = fileUpload1.getHeaderEncoding();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileSizeMax(10L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = fileUpload1.getFileItemFactory();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = fileUpload1.getFieldName(fileItemHeaders8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(fileItemFactory6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory15 = fileUpload1.getFileItemFactory();
        fileUpload1.setFileSizeMax(100L);
        org.apache.commons.fileupload2.RequestContext requestContext18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator19 = fileUpload1.getItemIterator(requestContext18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory15);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileCountMax((long) (short) 100);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory10 = null;
        fileUpload1.setFileItemFactory(fileItemFactory10);
        byte[] byteArray13 = fileUpload1.getBoundary("multipart/mixed");
        java.lang.String str14 = fileUpload1.getHeaderEncoding();
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        byte[] byteArray12 = fileUpload1.getBoundary("hi!");
        org.apache.commons.fileupload2.RequestContext requestContext13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator14 = fileUpload1.getItemIterator(requestContext13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(byteArray12);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileSizeMax(10L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = fileUpload1.getFileItemFactory();
        long long7 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener8 = null;
        fileUpload1.setProgressListener(progressListener8);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory10 = fileUpload1.getFileItemFactory();
        org.junit.Assert.assertNull(fileItemFactory6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertNull(fileItemFactory10);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        org.apache.commons.fileupload2.RequestContext requestContext9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList10 = fileUpload1.parseRequest(requestContext9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        fileUpload1.setSizeMax(100L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str13 = fileUpload1.getHeaderEncoding();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        fileUpload1.setHeaderEncoding("multipart/form-data");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory7 = fileUpload1.getFileItemFactory();
        fileUpload1.setFileCountMax((long) (-1));
        fileUpload1.setFileSizeMax((long) 1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(fileItemFactory7);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        long long8 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.RequestContext requestContext9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap10 = fileUpload1.parseParameterMap(requestContext9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setFileCountMax((long) 10);
        fileUpload1.setFileSizeMax((long) (short) -1);
        fileUpload1.setFileCountMax((long) (byte) 100);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        fileUpload1.setFileCountMax((long) (short) 10);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        org.apache.commons.fileupload2.ProgressListener progressListener13 = fileUpload1.getProgressListener();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory14 = fileUpload1.getFileItemFactory();
        long long15 = fileUpload1.getFileCountMax();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener13);
        org.junit.Assert.assertNull(fileItemFactory14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        fileUpload1.setSizeMax(100L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        java.lang.String str11 = fileUpload1.getHeaderEncoding();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        fileUpload1.setHeaderEncoding("Content-length");
        java.lang.String str9 = fileUpload1.getHeaderEncoding();
        long long10 = fileUpload1.getFileCountMax();
        java.lang.Class<?> wildcardClass11 = fileUpload1.getClass();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Content-length" + "'", str9, "Content-length");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        byte[] byteArray6 = fileUpload1.getBoundary("attachment");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(byteArray6);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener5 = fileUpload1.getProgressListener();
        fileUpload1.setSizeMax(1L);
        fileUpload1.setSizeMax((long) 100);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener5);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory13 = fileUpload1.getFileItemFactory();
        fileUpload1.setFileSizeMax((long) (short) -1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertNull(fileItemFactory13);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        long long11 = fileUpload1.getFileSizeMax();
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 97L + "'", long11 == 97L);
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory13 = fileUpload1.getFileItemFactory();
        long long14 = fileUpload1.getSizeMax();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertNull(fileItemFactory13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setFileCountMax((long) 10);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory10 = null;
        fileUpload1.setFileItemFactory(fileItemFactory10);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        long long9 = fileUpload1.getFileCountMax();
        java.lang.String str10 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.RequestContext requestContext11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList12 = fileUpload1.parseRequest(requestContext11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory7 = fileUpload1.getFileItemFactory();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass8 = fileItemFactory7.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(fileItemFactory7);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setFileCountMax((long) 100);
        long long4 = fileUpload1.getFileSizeMax();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory15 = fileUpload1.getFileItemFactory();
        fileUpload1.setFileCountMax((long) (byte) -1);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory18 = null;
        fileUpload1.setFileItemFactory(fileItemFactory18);
        java.lang.String str20 = fileUpload1.getHeaderEncoding();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "attachment" + "'", str20, "attachment");
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setFileCountMax((long) 100);
        long long4 = fileUpload1.getFileCountMax();
        long long5 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.RequestContext requestContext6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList7 = fileUpload1.parseRequest(requestContext6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 100L + "'", long5 == 100L);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        byte[] byteArray8 = fileUpload1.getBoundary("attachment");
        fileUpload1.setHeaderEncoding("Content-disposition");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = fileUpload1.getFileName(fileItemHeaders13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(byteArray8);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        long long5 = fileUpload1.getFileSizeMax();
        long long6 = fileUpload1.getFileSizeMax();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        long long10 = fileUpload1.getFileCountMax();
        long long11 = fileUpload1.getFileSizeMax();
        long long12 = fileUpload1.getSizeMax();
        long long13 = fileUpload1.getSizeMax();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        fileUpload1.setFileCountMax((long) (short) -1);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.ProgressListener progressListener9 = fileUpload1.getProgressListener();
        fileUpload1.setFileSizeMax(10L);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(progressListener9);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        byte[] byteArray8 = fileUpload1.getBoundary("attachment");
        fileUpload1.setHeaderEncoding("Content-disposition");
        byte[] byteArray12 = fileUpload1.getBoundary("Content-type");
        fileUpload1.setFileCountMax((long) '#');
        long long15 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory16 = fileUpload1.getFileItemFactory();
        org.apache.commons.fileupload2.RequestContext requestContext17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator18 = fileUpload1.getItemIterator(requestContext17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory16);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileSizeMax(10L);
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = fileUpload1.getFileName(fileItemHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileCountMax((long) (short) 100);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory10 = null;
        fileUpload1.setFileItemFactory(fileItemFactory10);
        byte[] byteArray13 = fileUpload1.getBoundary("multipart/mixed");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = byteArray13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNull(byteArray13);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory4 = null;
        fileUpload1.setFileItemFactory(fileItemFactory4);
        org.apache.commons.fileupload2.RequestContext requestContext6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap7 = fileUpload1.parseParameterMap(requestContext6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        org.apache.commons.fileupload2.ProgressListener progressListener10 = null;
        fileUpload1.setProgressListener(progressListener10);
        long long12 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener13 = fileUpload1.getProgressListener();
        fileUpload1.setSizeMax(97L);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory16 = null;
        fileUpload1.setFileItemFactory(fileItemFactory16);
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 97L + "'", long12 == 97L);
        org.junit.Assert.assertNull(progressListener13);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        fileUpload1.setFileCountMax((long) 1);
        fileUpload1.setFileSizeMax((long) (short) -1);
        byte[] byteArray11 = fileUpload1.getBoundary("multipart/");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory12 = fileUpload1.getFileItemFactory();
        org.apache.commons.fileupload2.RequestContext requestContext13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap14 = fileUpload1.parseParameterMap(requestContext13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertNull(fileItemFactory12);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        java.lang.String str6 = fileUpload1.getHeaderEncoding();
        byte[] byteArray8 = fileUpload1.getBoundary("attachment");
        fileUpload1.setFileCountMax((long) (byte) 1);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(byteArray8);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setFileSizeMax(10L);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        java.lang.String str11 = fileUpload1.getHeaderEncoding();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory12 = fileUpload1.getFileItemFactory();
        java.lang.String str13 = fileUpload1.getHeaderEncoding();
        long long14 = fileUpload1.getFileCountMax();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(fileItemFactory12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory8 = null;
        fileUpload1.setFileItemFactory(fileItemFactory8);
        org.apache.commons.fileupload2.ProgressListener progressListener10 = null;
        fileUpload1.setProgressListener(progressListener10);
        org.apache.commons.fileupload2.RequestContext requestContext12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator13 = fileUpload1.getItemIterator(requestContext12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory15 = fileUpload1.getFileItemFactory();
        fileUpload1.setFileCountMax((long) (byte) -1);
        byte[] byteArray19 = fileUpload1.getBoundary("Content-length");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory15);
        org.junit.Assert.assertNull(byteArray19);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory15 = fileUpload1.getFileItemFactory();
        fileUpload1.setFileCountMax((long) (byte) -1);
        long long18 = fileUpload1.getSizeMax();
        java.lang.String str19 = fileUpload1.getHeaderEncoding();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(fileItemFactory15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "attachment" + "'", str19, "attachment");
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        java.lang.String str11 = fileUpload1.getHeaderEncoding();
        byte[] byteArray13 = fileUpload1.getBoundary("");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory14 = null;
        fileUpload1.setFileItemFactory(fileItemFactory14);
        org.apache.commons.fileupload2.FileItemHeaders fileItemHeaders16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = fileUpload1.getFileName(fileItemHeaders16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot invoke \"org.apache.commons.fileupload2.FileItemHeaders.getHeader(String)\" because \"headers\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(byteArray13);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileCountMax((long) (short) 100);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory10 = null;
        fileUpload1.setFileItemFactory(fileItemFactory10);
        byte[] byteArray13 = fileUpload1.getBoundary("multipart/mixed");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory14 = null;
        fileUpload1.setFileItemFactory(fileItemFactory14);
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNull(byteArray13);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        java.lang.String str4 = fileUpload1.getHeaderEncoding();
        fileUpload1.setHeaderEncoding("multipart/form-data");
        fileUpload1.setSizeMax((long) '4');
        long long9 = fileUpload1.getSizeMax();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        long long8 = fileUpload1.getSizeMax();
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        long long11 = fileUpload1.getSizeMax();
        fileUpload1.setFileCountMax((long) (byte) 10);
        fileUpload1.setHeaderEncoding("multipart/");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        byte[] byteArray3 = fileUpload1.getBoundary("Content-length");
        long long4 = fileUpload1.getFileCountMax();
        fileUpload1.setFileSizeMax((long) 1);
        org.apache.commons.fileupload2.ProgressListener progressListener7 = null;
        fileUpload1.setProgressListener(progressListener7);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory9 = null;
        fileUpload1.setFileItemFactory(fileItemFactory9);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory11 = null;
        fileUpload1.setFileItemFactory(fileItemFactory11);
        fileUpload1.setHeaderEncoding("attachment");
        fileUpload1.setHeaderEncoding("multipart/");
        byte[] byteArray18 = fileUpload1.getBoundary("Content-type");
        org.apache.commons.fileupload2.RequestContext requestContext19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap20 = fileUpload1.parseParameterMap(requestContext19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertNull(byteArray18);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        org.apache.commons.fileupload2.ProgressListener progressListener10 = null;
        fileUpload1.setProgressListener(progressListener10);
        long long12 = fileUpload1.getFileSizeMax();
        org.apache.commons.fileupload2.ProgressListener progressListener13 = fileUpload1.getProgressListener();
        fileUpload1.setSizeMax(97L);
        org.apache.commons.fileupload2.RequestContext requestContext16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.fileupload2.FileItemIterator fileItemIterator17 = fileUpload1.getItemIterator(requestContext16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 97L + "'", long12 == 97L);
        org.junit.Assert.assertNull(progressListener13);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        long long6 = fileUpload1.getFileSizeMax();
        long long7 = fileUpload1.getFileCountMax();
        org.apache.commons.fileupload2.RequestContext requestContext8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap9 = fileUpload1.parseParameterMap(requestContext8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setFileCountMax((long) 100);
        fileUpload1.setFileSizeMax((long) (byte) 10);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        fileUpload1.setHeaderEncoding("");
        fileUpload1.setSizeMax(0L);
        org.apache.commons.fileupload2.ProgressListener progressListener14 = fileUpload1.getProgressListener();
        byte[] byteArray16 = fileUpload1.getBoundary("Content-type");
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNull(progressListener14);
        org.junit.Assert.assertNull(byteArray16);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        fileUpload1.setFileCountMax((long) (short) 0);
        byte[] byteArray7 = fileUpload1.getBoundary("multipart/");
        fileUpload1.setFileSizeMax((long) 'a');
        long long10 = fileUpload1.getFileSizeMax();
        byte[] byteArray12 = fileUpload1.getBoundary("");
        org.apache.commons.fileupload2.RequestContext requestContext13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.apache.commons.fileupload2.FileItem> fileItemList14 = fileUpload1.parseRequest(requestContext13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 97L + "'", long10 == 97L);
        org.junit.Assert.assertNull(byteArray12);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        fileUpload1.setSizeMax((long) 100);
        org.apache.commons.fileupload2.ProgressListener progressListener4 = null;
        fileUpload1.setProgressListener(progressListener4);
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory6 = null;
        fileUpload1.setFileItemFactory(fileItemFactory6);
        fileUpload1.setHeaderEncoding("Content-disposition");
        long long10 = fileUpload1.getSizeMax();
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100L + "'", long10 == 100L);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        org.apache.commons.fileupload2.FileItemFactory fileItemFactory0 = null;
        org.apache.commons.fileupload2.FileUpload fileUpload1 = new org.apache.commons.fileupload2.FileUpload(fileItemFactory0);
        org.apache.commons.fileupload2.ProgressListener progressListener2 = null;
        fileUpload1.setProgressListener(progressListener2);
        fileUpload1.setHeaderEncoding("Content-type");
        org.apache.commons.fileupload2.RequestContext requestContext6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Map<java.lang.String, java.util.List<org.apache.commons.fileupload2.FileItem>> strMap7 = fileUpload1.parseParameterMap(requestContext6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: requestContext");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }
}

